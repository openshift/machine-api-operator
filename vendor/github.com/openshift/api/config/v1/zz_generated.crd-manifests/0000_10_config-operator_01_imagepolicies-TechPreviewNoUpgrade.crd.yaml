apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/2310
    api.openshift.io/merged-by-featuregates: "true"
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: TechPreviewNoUpgrade
  name: imagepolicies.config.openshift.io
spec:
  group: config.openshift.io
  names:
    kind: ImagePolicy
    listKind: ImagePolicyList
    plural: imagepolicies
    singular: imagepolicy
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: |-
          ImagePolicy holds namespace-wide configuration for image signature verification

          Compatibility level 1: Stable within a major release for a minimum of 12 months or 3 minor releases (whichever is longer).
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec holds user settable values for configuration
            properties:
              policy:
                description: |-
                  policy is a required field that contains configuration to allow scopes to be verified, and defines how
                  images not matching the verification policy will be treated.
                properties:
                  rootOfTrust:
                    description: |-
                      rootOfTrust is a required field that defines the root of trust for verifying image signatures during retrieval.
                      This allows image consumers to specify policyType and corresponding configuration of the policy, matching how the policy was generated.
                    properties:
                      fulcioCAWithRekor:
                        description: |-
                          fulcioCAWithRekor defines the root of trust configuration based on the Fulcio certificate and the Rekor public key.
                          fulcioCAWithRekor is required when policyType is FulcioCAWithRekor, and forbidden otherwise
                          For more information about Fulcio and Rekor, please refer to the document at:
                          https://github.com/sigstore/fulcio and https://github.com/sigstore/rekor
                        properties:
                          fulcioCAData:
                            description: |-
                              fulcioCAData is a required field contains inline base64-encoded data for the PEM format fulcio CA.
                              fulcioCAData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                            x-kubernetes-validations:
                            - message: the fulcioCAData must start with base64 encoding
                                of '-----BEGIN CERTIFICATE-----'.
                              rule: string(self).startsWith('-----BEGIN CERTIFICATE-----')
                            - message: the fulcioCAData must end with base64 encoding
                                of '-----END CERTIFICATE-----'.
                              rule: string(self).endsWith('-----END CERTIFICATE-----\n')
                                || string(self).endsWith('-----END CERTIFICATE-----')
                          fulcioSubject:
                            description: fulcioSubject is a required field specifies
                              OIDC issuer and the email of the Fulcio authentication
                              configuration.
                            properties:
                              oidcIssuer:
                                description: |-
                                  oidcIssuer is a required filed contains the expected OIDC issuer. The oidcIssuer must be a valid URL and at most 2048 characters in length.
                                  It will be verified that the Fulcio-issued certificate contains a (Fulcio-defined) certificate extension pointing at this OIDC issuer URL.
                                  When Fulcio issues certificates, it includes a value based on an URL inside the client-provided ID token.
                                  Example: "https://expected.OIDC.issuer/"
                                maxLength: 2048
                                type: string
                                x-kubernetes-validations:
                                - message: oidcIssuer must be a valid URL
                                  rule: isURL(self)
                              signedEmail:
                                description: |-
                                  signedEmail is a required field holds the email address that the Fulcio certificate is issued for.
                                  The signedEmail must be a valid email address and at most 320 characters in length.
                                  Example: "expected-signing-user@example.com"
                                maxLength: 320
                                type: string
                                x-kubernetes-validations:
                                - message: invalid email address
                                  rule: self.matches('^\\S+@\\S+$')
                            required:
                            - oidcIssuer
                            - signedEmail
                            type: object
                          rekorKeyData:
                            description: |-
                              rekorKeyData is a required field contains inline base64-encoded data for the PEM format from the Rekor public key.
                              rekorKeyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                            x-kubernetes-validations:
                            - message: the rekorKeyData must start with base64 encoding
                                of '-----BEGIN PUBLIC KEY-----'.
                              rule: string(self).startsWith('-----BEGIN PUBLIC KEY-----')
                            - message: the rekorKeyData must end with base64 encoding
                                of '-----END PUBLIC KEY-----'.
                              rule: string(self).endsWith('-----END PUBLIC KEY-----\n')
                                || string(self).endsWith('-----END PUBLIC KEY-----')
                        required:
                        - fulcioCAData
                        - fulcioSubject
                        - rekorKeyData
                        type: object
                      pki:
                        description: |-
                          pki defines the root of trust configuration based on Bring Your Own Public Key Infrastructure (BYOPKI) Root CA(s) and corresponding intermediate certificates.
                          pki is required when policyType is PKI, and forbidden otherwise.
                        properties:
                          caIntermediatesData:
                            description: |-
                              caIntermediatesData contains base64-encoded data of a certificate bundle PEM file, which contains one or more intermediate certificates in the PEM format. The total length of the data must not exceed 8192 characters.
                              caIntermediatesData requires caRootsData to be set.
                            format: byte
                            maxLength: 8192
                            minLength: 72
                            type: string
                            x-kubernetes-validations:
                            - message: the caIntermediatesData must start with base64
                                encoding of '-----BEGIN CERTIFICATE-----'.
                              rule: string(self).startsWith('-----BEGIN CERTIFICATE-----')
                            - message: the caIntermediatesData must end with base64
                                encoding of '-----END CERTIFICATE-----'.
                              rule: string(self).endsWith('-----END CERTIFICATE-----\n')
                                || string(self).endsWith('-----END CERTIFICATE-----')
                            - message: caIntermediatesData must be base64 encoding
                                of valid PEM format data contain the same number of
                                '-----BEGIN CERTIFICATE-----' and '-----END CERTIFICATE-----'
                                markers.
                              rule: string(self).findAll('-----BEGIN CERTIFICATE-----').size()
                                == string(self).findAll('-----END CERTIFICATE-----').size()
                          caRootsData:
                            description: caRootsData contains base64-encoded data
                              of a certificate bundle PEM file, which contains one
                              or more CA roots in the PEM format. The total length
                              of the data must not exceed 8192 characters.
                            format: byte
                            maxLength: 8192
                            minLength: 72
                            type: string
                            x-kubernetes-validations:
                            - message: the caRootsData must start with base64 encoding
                                of '-----BEGIN CERTIFICATE-----'.
                              rule: string(self).startsWith('-----BEGIN CERTIFICATE-----')
                            - message: the caRootsData must end with base64 encoding
                                of '-----END CERTIFICATE-----'.
                              rule: string(self).endsWith('-----END CERTIFICATE-----\n')
                                || string(self).endsWith('-----END CERTIFICATE-----')
                            - message: caRootsData must be base64 encoding of valid
                                PEM format data contain the same number of '-----BEGIN
                                CERTIFICATE-----' and '-----END CERTIFICATE-----'
                                markers.
                              rule: string(self).findAll('-----BEGIN CERTIFICATE-----').size()
                                == string(self).findAll('-----END CERTIFICATE-----').size()
                          pkiCertificateSubject:
                            description: pkiCertificateSubject defines the requirements
                              imposed on the subject to which the certificate was
                              issued.
                            properties:
                              email:
                                description: |-
                                  email specifies the expected email address imposed on the subject to which the certificate was issued, and must match the email address listed in the Subject Alternative Name (SAN) field of the certificate.
                                  The email must be a valid email address and at most 320 characters in length.
                                maxLength: 320
                                type: string
                                x-kubernetes-validations:
                                - message: invalid email address
                                  rule: self.matches('^\\S+@\\S+$')
                              hostname:
                                description: |-
                                  hostname specifies the expected hostname imposed on the subject to which the certificate was issued, and it must match the hostname listed in the Subject Alternative Name (SAN) DNS field of the certificate.
                                  The hostname must be a valid dns 1123 subdomain name, optionally prefixed by '*.', and at most 253 characters in length.
                                  It must consist only of lowercase alphanumeric characters, hyphens, periods and the optional preceding asterisk.
                                maxLength: 253
                                type: string
                                x-kubernetes-validations:
                                - message: hostname must be a valid dns 1123 subdomain
                                    name, optionally prefixed by '*.'. It must consist
                                    only of lowercase alphanumeric characters, hyphens,
                                    periods and the optional preceding asterisk.
                                  rule: 'self.startsWith(''*.'') ? !format.dns1123Subdomain().validate(self.replace(''*.'',
                                    '''', 1)).hasValue() : !format.dns1123Subdomain().validate(self).hasValue()'
                            type: object
                            x-kubernetes-validations:
                            - message: at least one of email or hostname must be set
                                in pkiCertificateSubject
                              rule: has(self.email) || has(self.hostname)
                        required:
                        - caRootsData
                        - pkiCertificateSubject
                        type: object
                      policyType:
                        description: |-
                          policyType is a required field specifies the type of the policy for verification. This field must correspond to how the policy was generated.
                          Allowed values are "PublicKey", "FulcioCAWithRekor", and "PKI".
                          When set to "PublicKey", the policy relies on a sigstore publicKey and may optionally use a Rekor verification.
                          When set to "FulcioCAWithRekor", the policy is based on the Fulcio certification and incorporates a Rekor verification.
                          When set to "PKI", the policy is based on the certificates from Bring Your Own Public Key Infrastructure (BYOPKI). This value is enabled by turning on the SigstoreImageVerificationPKI feature gate.
                        enum:
                        - PublicKey
                        - FulcioCAWithRekor
                        - PKI
                        type: string
                      publicKey:
                        description: |-
                          publicKey defines the root of trust configuration based on a sigstore public key. Optionally include a Rekor public key for Rekor verification.
                          publicKey is required when policyType is PublicKey, and forbidden otherwise.
                        properties:
                          keyData:
                            description: |-
                              keyData is a required field contains inline base64-encoded data for the PEM format public key.
                              keyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            minLength: 68
                            type: string
                            x-kubernetes-validations:
                            - message: the keyData must start with base64 encoding
                                of '-----BEGIN PUBLIC KEY-----'.
                              rule: string(self).startsWith('-----BEGIN PUBLIC KEY-----')
                            - message: the keyData must end with base64 encoding of
                                '-----END PUBLIC KEY-----'.
                              rule: string(self).endsWith('-----END PUBLIC KEY-----\n')
                                || string(self).endsWith('-----END PUBLIC KEY-----')
                          rekorKeyData:
                            description: |-
                              rekorKeyData is an optional field contains inline base64-encoded data for the PEM format from the Rekor public key.
                              rekorKeyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                            x-kubernetes-validations:
                            - message: the rekorKeyData must start with base64 encoding
                                of '-----BEGIN PUBLIC KEY-----'.
                              rule: string(self).startsWith('-----BEGIN PUBLIC KEY-----')
                            - message: the rekorKeyData must end with base64 encoding
                                of '-----END PUBLIC KEY-----'.
                              rule: string(self).endsWith('-----END PUBLIC KEY-----\n')
                                || string(self).endsWith('-----END PUBLIC KEY-----')
                        required:
                        - keyData
                        type: object
                    required:
                    - policyType
                    type: object
                    x-kubernetes-validations:
                    - message: pki is required when policyType is PKI, and forbidden
                        otherwise
                      rule: 'has(self.policyType) && self.policyType == ''PKI'' ?
                        has(self.pki) : !has(self.pki)'
                    - message: publicKey is required when policyType is PublicKey,
                        and forbidden otherwise
                      rule: 'has(self.policyType) && self.policyType == ''PublicKey''
                        ? has(self.publicKey) : !has(self.publicKey)'
                    - message: fulcioCAWithRekor is required when policyType is FulcioCAWithRekor,
                        and forbidden otherwise
                      rule: 'has(self.policyType) && self.policyType == ''FulcioCAWithRekor''
                        ? has(self.fulcioCAWithRekor) : !has(self.fulcioCAWithRekor)'
                  signedIdentity:
                    description: |-
                      signedIdentity is an optional field specifies what image identity the signature claims about the image. This is useful when the image identity in the signature differs from the original image spec, such as when mirror registry is configured for the image scope, the signature from the mirror registry contains the image identity of the mirror instead of the original scope.
                      The required matchPolicy field specifies the approach used in the verification process to verify the identity in the signature and the actual image identity, the default matchPolicy is "MatchRepoDigestOrExact".
                    properties:
                      exactRepository:
                        description: |-
                          exactRepository specifies the repository that must be exactly matched by the identity in the signature.
                          exactRepository is required if matchPolicy is set to "ExactRepository". It is used to verify that the signature claims an identity matching this exact repository, rather than the original image identity.
                        properties:
                          repository:
                            description: |-
                              repository is the reference of the image identity to be matched.
                              repository is required if matchPolicy is set to "ExactRepository".
                              The value should be a repository name (by omitting the tag or digest) in a registry implementing the "Docker Registry HTTP API V2". For example, docker.io/library/busybox
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity.
                                The repository or prefix must starts with 'localhost'
                                or a valid '.' separated domain. If contains registry
                                paths, the path component names must start with at
                                least one letter or number, with following parts able
                                to be separated by one period, one or two underscore
                                and multiple dashes.
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                        required:
                        - repository
                        type: object
                      matchPolicy:
                        description: |-
                          matchPolicy is a required filed specifies matching strategy to verify the image identity in the signature against the image scope.
                          Allowed values are "MatchRepoDigestOrExact", "MatchRepository", "ExactRepository", "RemapIdentity". When omitted, the default value is "MatchRepoDigestOrExact".
                          When set to "MatchRepoDigestOrExact", the identity in the signature must be in the same repository as the image identity if the image identity is referenced by a digest. Otherwise, the identity in the signature must be the same as the image identity.
                          When set to "MatchRepository", the identity in the signature must be in the same repository as the image identity.
                          When set to "ExactRepository", the exactRepository must be specified. The identity in the signature must be in the same repository as a specific identity specified by "repository".
                          When set to "RemapIdentity", the remapIdentity must be specified. The signature must be in the same as the remapped image identity. Remapped image identity is obtained by replacing the "prefix" with the specified “signedPrefix” if the the image identity matches the specified remapPrefix.
                        enum:
                        - MatchRepoDigestOrExact
                        - MatchRepository
                        - ExactRepository
                        - RemapIdentity
                        type: string
                      remapIdentity:
                        description: |-
                          remapIdentity specifies the prefix remapping rule for verifying image identity.
                          remapIdentity is required if matchPolicy is set to "RemapIdentity". It is used to verify that the signature claims a different registry/repository prefix than the original image.
                        properties:
                          prefix:
                            description: |-
                              prefix is required if matchPolicy is set to "RemapIdentity".
                              prefix is the prefix of the image identity to be matched.
                              If the image identity matches the specified prefix, that prefix is replaced by the specified “signedPrefix” (otherwise it is used as unchanged and no remapping takes place).
                              This is useful when verifying signatures for a mirror of some other repository namespace that preserves the vendor’s repository structure.
                              The prefix and signedPrefix values can be either host[:port] values (matching exactly the same host[:port], string), repository namespaces,
                              or repositories (i.e. they must not contain tags/digests), and match as prefixes of the fully expanded form.
                              For example, docker.io/library/busybox (not busybox) to specify that single repository, or docker.io/library (not an empty string) to specify the parent namespace of docker.io/library/busybox.
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity.
                                The repository or prefix must starts with 'localhost'
                                or a valid '.' separated domain. If contains registry
                                paths, the path component names must start with at
                                least one letter or number, with following parts able
                                to be separated by one period, one or two underscore
                                and multiple dashes.
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                          signedPrefix:
                            description: |-
                              signedPrefix is required if matchPolicy is set to "RemapIdentity".
                              signedPrefix is the prefix of the image identity to be matched in the signature. The format is the same as "prefix". The values can be either host[:port] values (matching exactly the same host[:port], string), repository namespaces,
                              or repositories (i.e. they must not contain tags/digests), and match as prefixes of the fully expanded form.
                              For example, docker.io/library/busybox (not busybox) to specify that single repository, or docker.io/library (not an empty string) to specify the parent namespace of docker.io/library/busybox.
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity.
                                The repository or prefix must starts with 'localhost'
                                or a valid '.' separated domain. If contains registry
                                paths, the path component names must start with at
                                least one letter or number, with following parts able
                                to be separated by one period, one or two underscore
                                and multiple dashes.
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                        required:
                        - prefix
                        - signedPrefix
                        type: object
                    required:
                    - matchPolicy
                    type: object
                    x-kubernetes-validations:
                    - message: exactRepository is required when matchPolicy is ExactRepository,
                        and forbidden otherwise
                      rule: '(has(self.matchPolicy) && self.matchPolicy == ''ExactRepository'')
                        ? has(self.exactRepository) : !has(self.exactRepository)'
                    - message: remapIdentity is required when matchPolicy is RemapIdentity,
                        and forbidden otherwise
                      rule: '(has(self.matchPolicy) && self.matchPolicy == ''RemapIdentity'')
                        ? has(self.remapIdentity) : !has(self.remapIdentity)'
                required:
                - rootOfTrust
                type: object
              scopes:
                description: |-
                  scopes is a required field that defines the list of image identities assigned to a policy. Each item refers to a scope in a registry implementing the "Docker Registry HTTP API V2".
                  Scopes matching individual images are named Docker references in the fully expanded form, either using a tag or digest. For example, docker.io/library/busybox:latest (not busybox:latest).
                  More general scopes are prefixes of individual-image scopes, and specify a repository (by omitting the tag or digest), a repository
                  namespace, or a registry host (by only specifying the host name and possibly a port number) or a wildcard expression starting with `*.`, for matching all subdomains (not including a port number).
                  Wildcards are only supported for subdomain matching, and may not be used in the middle of the host, i.e.  *.example.com is a valid case, but example*.*.com is not.
                  This support no more than 256 scopes in one object. If multiple scopes match a given image, only the policy requirements for the most specific scope apply. The policy requirements for more general scopes are ignored.
                  In addition to setting a policy appropriate for your own deployed applications, make sure that a policy on the OpenShift image repositories
                  quay.io/openshift-release-dev/ocp-release, quay.io/openshift-release-dev/ocp-v4.0-art-dev (or on a more general scope) allows deployment of the OpenShift images required for cluster operation.
                  If a scope is configured in both the ClusterImagePolicy and the ImagePolicy, or if the scope in ImagePolicy is nested under one of the scopes from the ClusterImagePolicy, only the policy from the ClusterImagePolicy will be applied.
                  For additional details about the format, please refer to the document explaining the docker transport field,
                  which can be found at: https://github.com/containers/image/blob/main/docs/containers-policy.json.5.md#docker
                items:
                  maxLength: 512
                  type: string
                  x-kubernetes-validations:
                  - message: invalid image scope format, scope must contain a fully
                      qualified domain name or 'localhost'
                    rule: 'size(self.split(''/'')[0].split(''.'')) == 1 ? self.split(''/'')[0].split(''.'')[0].split('':'')[0]
                      == ''localhost'' : true'
                  - message: invalid image scope with wildcard, a wildcard can only
                      be at the start of the domain and is only supported for subdomain
                      matching, not path matching
                    rule: 'self.contains(''*'') ? self.matches(''^\\*(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+$'')
                      : true'
                  - message: invalid repository namespace or image specification in
                      the image scope
                    rule: '!self.contains(''*'') ? self.matches(''^((((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?)(?::([\\w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$'')
                      : true'
                maxItems: 256
                type: array
                x-kubernetes-list-type: set
            required:
            - policy
            - scopes
            type: object
          status:
            description: status contains the observed state of the resource.
            properties:
              conditions:
                description: |-
                  conditions provide details on the status of this API Resource.
                  condition type 'Pending' indicates that the customer resource contains a policy that cannot take effect. It is either overwritten by a global policy or the image scope is not valid.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 8
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
